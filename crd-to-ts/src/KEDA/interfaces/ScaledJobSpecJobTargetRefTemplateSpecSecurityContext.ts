// @ts-nocheck
/**
 * 
 * 
 *
 * The version of the OpenAPI document: 
 * Contact Email: 
 * License: 
 *
 * NOTE: This file is auto generated by crdtotypes (https://github.com/yaacov/crdtoapi/).
 * https://github.com/yaacov/crdtoapi/README.crdtotypes
 */

import { ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSeLinuxOptions } from './ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSeLinuxOptions';
import { ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSeccompProfile } from './ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSeccompProfile';
import { ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSysctls } from './ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSysctls';
import { ScaledJobSpecJobTargetRefTemplateSpecSecurityContextWindowsOptions } from './ScaledJobSpecJobTargetRefTemplateSpecSecurityContextWindowsOptions';

/**
 * SecurityContext holds pod-level security attributes and common container settings.
Optional: Defaults to empty.  See type description for default values of each field.
 *
 * @export
 */
export interface ScaledJobSpecJobTargetRefTemplateSpecSecurityContext {
  /** fsGroup
   * A special supplemental group that applies to all containers in a pod.
Some volume types allow the Kubelet to change the ownership of that volume
to be owned by the pod:


1. The owning GID will be the FSGroup
2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
3. The permission bits are OR'd with rw-rw----


If unset, the Kubelet will not modify the ownership and permissions of any volume.
Note that this field cannot be set when spec.os.name is windows.
   *
   * @required {false}
   * @format {int64}
   * @originalType {integer}
   */
  fsGroup?: number;
  /** fsGroupChangePolicy
   * fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
before being exposed inside Pod. This field will only apply to
volume types which support fsGroup based ownership(and permissions).
It will have no effect on ephemeral volume types such as: secret, configmaps
and emptydir.
Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
Note that this field cannot be set when spec.os.name is windows.
   *
   * @required {false}
   */
  fsGroupChangePolicy?: string;
  /** runAsGroup
   * The GID to run the entrypoint of the container process.
Uses runtime default if unset.
May also be set in SecurityContext.  If set in both SecurityContext and
PodSecurityContext, the value specified in SecurityContext takes precedence
for that container.
Note that this field cannot be set when spec.os.name is windows.
   *
   * @required {false}
   * @format {int64}
   * @originalType {integer}
   */
  runAsGroup?: number;
  /** runAsNonRoot
   * Indicates that the container must run as a non-root user.
If true, the Kubelet will validate the image at runtime to ensure that it
does not run as UID 0 (root) and fail to start the container if it does.
If unset or false, no such validation will be performed.
May also be set in SecurityContext.  If set in both SecurityContext and
PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @required {false}
   */
  runAsNonRoot?: boolean;
  /** runAsUser
   * The UID to run the entrypoint of the container process.
Defaults to user specified in image metadata if unspecified.
May also be set in SecurityContext.  If set in both SecurityContext and
PodSecurityContext, the value specified in SecurityContext takes precedence
for that container.
Note that this field cannot be set when spec.os.name is windows.
   *
   * @required {false}
   * @format {int64}
   * @originalType {integer}
   */
  runAsUser?: number;
  /** seLinuxOptions
   * The SELinux context to be applied to all containers.
If unspecified, the container runtime will allocate a random SELinux context for each
container.  May also be set in SecurityContext.  If set in
both SecurityContext and PodSecurityContext, the value specified in SecurityContext
takes precedence for that container.
Note that this field cannot be set when spec.os.name is windows.
   *
   * @required {false}
   */
  seLinuxOptions?: ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSeLinuxOptions;
  /** seccompProfile
   * The seccomp options to use by the containers in this pod.
Note that this field cannot be set when spec.os.name is windows.
   *
   * @required {false}
   */
  seccompProfile?: ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSeccompProfile;
  /** supplementalGroups
   *
   * @required {false}
   * @format {int64}
   * @originalType {integer}
   */
  supplementalGroups?: number[];
  /** sysctls
   * Sysctl defines a kernel parameter to be set
   *
   * @required {false}
   */
  sysctls?: ScaledJobSpecJobTargetRefTemplateSpecSecurityContextSysctls[];
  /** windowsOptions
   * The Windows specific settings applied to all containers.
If unspecified, the options within a container's SecurityContext will be used.
If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
Note that this field cannot be set when spec.os.name is linux.
   *
   * @required {false}
   */
  windowsOptions?: ScaledJobSpecJobTargetRefTemplateSpecSecurityContextWindowsOptions;
}
