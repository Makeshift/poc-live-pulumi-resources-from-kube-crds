// @ts-nocheck
/**
 * 
 * 
 *
 * The version of the OpenAPI document: 
 * Contact Email: 
 * License: 
 *
 * NOTE: This file is auto generated by crdtotypes (https://github.com/yaacov/crdtoapi/).
 * https://github.com/yaacov/crdtoapi/README.crdtotypes
 */

import { ScaledJobSpecJobTargetRefTemplateSpecVolumesStorageosSecretRef } from './ScaledJobSpecJobTargetRefTemplateSpecVolumesStorageosSecretRef';

/**
 * storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
 *
 * @export
 */
export interface ScaledJobSpecJobTargetRefTemplateSpecVolumesStorageos {
  /** fsType
   * fsType is the filesystem type to mount.
Must be a filesystem type supported by the host operating system.
Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @required {false}
   */
  fsType?: string;
  /** readOnly
   * readOnly defaults to false (read/write). ReadOnly here will force
the ReadOnly setting in VolumeMounts.
   *
   * @required {false}
   */
  readOnly?: boolean;
  /** secretRef
   * secretRef specifies the secret to use for obtaining the StorageOS API
credentials.  If not specified, default values will be attempted.
   *
   * @required {false}
   */
  secretRef?: ScaledJobSpecJobTargetRefTemplateSpecVolumesStorageosSecretRef;
  /** volumeName
   * volumeName is the human-readable name of the StorageOS volume.  Volume
names are only unique within a namespace.
   *
   * @required {false}
   */
  volumeName?: string;
  /** volumeNamespace
   * volumeNamespace specifies the scope of the volume within StorageOS.  If no
namespace is specified then the Pod's namespace will be used.  This allows the
Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
Set VolumeName to any name to override the default behaviour.
Set to "default" if you are not using namespaces within StorageOS.
Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @required {false}
   */
  volumeNamespace?: string;
}
